{"version":3,"sources":["faiash.js","ajax.js","dom.js","event.js"],"names":["Faiash","F","selector","context","ise","init","prototype","version","constructor","push","sort","splice","this","document","querySelector","call","querySelectorAll","i","length","toArr","r","Array","slice","apply","extend","copy","args","arguments","tmp","name","$","each","arr","func","forEach","Function","bind","ready","callback","readyState","addEventListener","module","exports","moudle","window","undefined","ajax","req","url","method","data","upload","progress","dc","error","match","shift","FormData","o","encodeURIComponent","join","XMLHttpRequest","open","onprogress","e","loaded","total","setRequestHeader","onreadystatechange","status","_data","responseText","getResponseHeader","JSON","parse","send","get","unshift","post","addClass","v","body","classList","el","add","className","removeClass","remove","replace","RegExp","split","hasClass","check","contains","cls","test","toggleClass","toggle","indexOf","attr","setAttribute","getAttribute","obj","object","hasOwnProperty","event","css","substr","style","cssText","html","innerHTML","on","off","removeEventListener"],"mappings":"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","file":"faiash.min.js","sourcesContent":["/**\n * F Core\n *\n * @author Rakume Hayashi<i@fake.moe>\n */\n\nvar Faiash = (function() {\n    // Define the F\n    var F = function(selector, context) {\n        return new F.ise.init(selector, context);\n    };\n\n    F.ise = F.prototype = {\n        // Version of F\n        version: 0.1,\n        constructor: F,\n\n        // Behaves like array\n        push: [].push,\n    \t  sort: [].sort,\n    \t  splice: [].splice\n    };\n\n    var init = F.ise.init = function(selector, context) {\n        // Return self when selector is \"\", void, undefined, false\n        if (!selector) {\n            return this;\n        }\n\n        // When context is string\n        if (typeof context === 'string') {\n            context = document.querySelector(context);\n        }\n\n        // When selector is an objcet\n        if (typeof selector === 'object') {\n            return [].push.call(this, selector);\n        } else {\n            selector = (context || document).querySelectorAll(selector);\n        }\n\n        for (i = 0; i < +selector.length; i++) {\n            this[i] = selector[i];\n        }\n\n        this.length = i;\n        return this;\n    }\n\n    init.prototype = F.ise;\n\n    F.toArr = function(r) {\n        return Array.prototype.slice.apply(r);\n    }\n\n    F.extend = F.ise.extend = function() {\n        var args = F.toArr(arguments),\n            tmp = {}, copy;\n\n        // No args\n        if (args.length < 1) {\n            return;\n        }\n\n        for (var i = 0; i < args.length; i++) {\n            for (var name in args[i]) {\n                copy = args[i][name];\n\n                // Prevent never-ending loop and undefined values\n                if (this === copy || typeof(copy) === 'undefined') {\n                    continue;\n                }\n\n                if (args.length === 1) {\n                    this[name] = copy;\n                    continue;\n                }\n\n                if (typeof(copy) === 'object') {\n                    tmp[name] = $.each(tmp[name], copy, true);\n                } else {\n                    if (typeof(tmp[name]) !== 'undefined' && !args[2]) {\n                      continue;\n                    }\n\n                    tmp[name] = copy;\n                }\n            }\n        }\n\n        if (args.length > 1) {\n          return tmp;\n        }\n\n        return this;\n    }\n\n    F.each = function(arr, func) {\n        var forEach = Function.prototype.call.bind(Array.prototype.forEach);\n        return forEach(arr, func);\n    }\n\n    F.ready = function(callback) {\n        return F(document).ready(callback);\n    }\n\n    F.ise.each = function(callback) {\n        return F.each(this, callback);\n    }\n\n    F.ise.ready = function(callback) {\n        if (this[0].readyState != 'loading') {\n            callback();\n        } else {\n            this[0].addEventListener('DOMContentLoaded', callback);\n        }\n\n        return this;\n    }\n\n    return F;\n})();\n\nif (typeof module === \"object\" && typeof module.exports === \"object\") {\n    moudle.exports = F;\n} else {\n    window.Faiash = Faiash;\n    window.$ === undefined && (window.$ = Faiash);\n}\n","/**\n * Ajax\n *\n * @author Rakume Hayashi<i@fake.moe>\n */\n\n;(function($) {\n  $.extend({\n      ajax: function() {\n          // Init the vars\n          var req, url, method, data, upload,\n              progress, dc, callback, error,\n              args = $.toArr(arguments);\n\n          // Get the method if it is in the arguments\n          if (args[0].match(/^get|post|put|delete$/i)) {\n              method = args.shift();\n          }\n\n          // Set the url\n          url = args.shift();\n\n          if (!url) {\n              return false;\n          }\n\n          // Get the data\n          if (typeof[0] === 'string') {\n              data = args.shift();\n          } else if (typeof[0] === 'object' && args[0].constructor === FormData) {\n              upload = true;\n              data = args.shift();\n          } else if (typeof args[0] === 'object') { // When array\n              dc = args.shift();\n\n              data = [];\n              $.each(dc, function(o, i) {\n                  // Need to urlencode it\n                  data.push(i + '=' + encodeURIComponent(o));\n              });\n\n              data = data.join('&');\n          } else { // When nothing\n              data = null;\n          }\n\n          // Set the method\n          if (!method) {\n              method = data ? 'POST' : 'GET';\n          }\n\n          // Get the callback\n          if (typeof args[0] === 'function') {\n              callback = args.shift();\n          }\n\n          // Get the error\n          if (typeof args[0] === 'function') {\n              error = args.shift();\n          }\n\n          // Get progress\n          if (typeof args[0] === 'function' && upload === true) {\n              progress = args.shift();\n          }\n\n          // Open a XHR\n          req = new XMLHttpRequest();\n          req.open(method, url, true);\n\n          if (progress) {\n              req.upload.onprogress = function(e) {\n                  progress(e.loaded / e.total);\n              }\n          }\n\n          // When is POST\n          (!data || upload) || req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n          if (callback || error) {\n              req.onreadystatechange = function() {\n                  if(this.readyState === 4) {\n                      if(this.status >= 200 && this.status < 400) {\n                          var _data = req.responseText;\n\n                          // When the data is json\n                          if ((this.getResponseHeader('Content-Type') || '').match(/json/)) {\n                              _data = JSON.parse(_data || null);\n                          }\n\n                          if (typeof callback === 'function') {\n                              callback(_data); // Callback to the function\n                          }\n                      } else if (typeof error === 'function') {\n                          error(this.status); // Error\n                      }\n                  }\n              }\n          }\n\n          req.send(data || '');\n          return req; // Return the detail\n      },\n\n      get: function() {\n        var args = $.toArr(arguments);\n        args.unshift('GET');\n\n        return this.ajax.apply(this, args);\n      },\n\n      post: function() {\n          var args = $.toArr(arguments);\n          args.unshift('POST');\n\n          return this.ajax.apply(this, args);\n      }\n  });\n})(Faiash);\n","/**\r\n * Dom\r\n *\r\n * @author Rakume Hayashi<i@fake.moe>\r\n */\r\n\r\n;(function($) {\r\n    $.ise.extend({\r\n        addClass: function(v) {\r\n            // Return false when v is '', void, undefined, false or when v is not a string\r\n            if (!v || typeof v !== 'string') {\r\n                return false;\r\n            }\r\n\r\n            if (document.body.classList) {\r\n                this.each(function(el) {\r\n                    el.classList.add(v);\r\n                });\r\n            } else {\r\n                this.each(function(el) {\r\n                    el.className += ' ' + v;\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        removeClass: function(v) {\r\n            // Return false when v is '', void, undefined, false or when v is not a string\r\n            if (!v || typeof v !== 'string') {\r\n                return false;\r\n            }\r\n\r\n            if (document.body.classList) {\r\n                this.each(function(el) {\r\n                    el.classList.remove(v);\r\n                });\r\n            } else {\r\n                this.each(function(el) {\r\n                    el.className = el.className.replace(new RegExp('(^|\\\\b)' + v.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        hasClass: function(v) {\r\n            var check;\r\n\r\n            // Return false when v is '', void, undefined, false or when v is not a string\r\n            if (!v || typeof v !== 'string') {\r\n                return false;\r\n            }\r\n\r\n            if (document.body.classList) {\r\n                this.each(function(el) {\r\n                    check = el.classList.contains(v);\r\n                });\r\n            } else {\r\n                this.each(function(el) {\r\n                    check = new RegExp('(^|)' + cls + '(|$)', 'gi').test(el.className);\r\n                });\r\n            }\r\n\r\n            if (check) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        toggleClass: function(v) {\r\n            // Return false when v is '', void, undefined, false or when v is not a string\r\n            if (!v || typeof v !== 'string') {\r\n                return false;\r\n            }\r\n\r\n            if (document.body.classList) {\r\n                this.each(function(el) {\r\n                    el.classList.toggle(v);\r\n                });\r\n            } else {\r\n                this.each(function(el) {\r\n                    if (el.className.indexOf(v) >= 0) {\r\n                        el.className = el.className.replace(new RegExp('(^|\\\\b)' + v.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n                    } else {\r\n                        el.className += ' ' + v;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        attr: function() {\r\n            var args = $.toArr(arguments);\r\n\r\n            if (args[1] && typeof args[0] === 'string') {\r\n                this.each(function(el) {\r\n                    el.setAttribute(args[0], args[1]);\r\n                });\r\n            } else if (typeof args[0] === 'object'){\r\n                $.each(args, function(obj) {\r\n                    this.each(function(el) {\r\n                        for (var attr in obj) {\r\n                            if (object.hasOwnProperty(attr)) {\r\n                                el.setAttribute(attr, obj[event][1]);\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            } else {\r\n                return this[0].getAttribute(args[0]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        css: function(v) {\r\n            if (!v) {\r\n                return this[0].style.cssText;\r\n            }\r\n\r\n            if (v.substr(-1) == ';') {\r\n                v = v.substr(0, v.length - 1);\r\n            }\r\n\r\n            this.each(function(el) {\r\n                el.style.cssText += (';' + v);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        html: function(v) {\r\n            if (!v) {\r\n                return this[0].innerHTML;\r\n            }\r\n\r\n            this.each(function(el) {\r\n                el.innerHTML = v;\r\n            })\r\n\r\n            return this;\r\n        }\r\n    });\r\n})(Faiash);","/**\n * Event\n *\n * @author Rakume Hayashi<i@fake.moe>\n */\n\n;(function($) {\n    $.ise.extend({\n        on: function() {\n            var args = $.toArr(arguments);\n\n            if (typeof args[0] === 'string') {\n                if (!args[0] || !args[1]) {\n                    return this;\n                }\n\n                this.each(function(el) {\n                    el.addEventListener(args[0], args[1], (args[2] ? args[2] : false));\n                });\n            } else if (typeof args[0] === 'object') {\n                $.each(args, function(obj) {\n                    this.each(function(el) {\n                        for (var event in obj) {\n                            if (object.hasOwnProperty(event)) {\n                                el.addEventListener(event, obj[event][1]);\n                            }\n                        }\n                    });\n                });\n            }\n\n            return this;\n        },\n\n        off: function() {\n            var args = $.toArr(arguments);\n\n            if (typeof args[0] === 'string') {\n                this.each(function(el) {\n                    el.removeEventListener(args[0], args[1], args[2]);\n                });\n            }  else if (typeof args[0] === 'object' && args.length === 1) {\n                $.each(args, function(obj) {\n                    this.each(function(el) {\n                        for (var event in obj) {\n                            if (object.hasOwnProperty(event)) {\n                                el.removeEventListener(event, obj[event][1]);\n                            }\n                        }\n                    });\n                });\n            }\n\n            return this;\n        }\n    });\n})(Faiash);\n"],"sourceRoot":"/source/"}